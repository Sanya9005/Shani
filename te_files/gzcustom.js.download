/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/wp-content/themes/gazette-3-0/assets/build/js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 79);
/******/ })
/************************************************************************/
/******/ ({

/***/ 79:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(80);


/***/ }),

/***/ 80:
/***/ (function(module, exports) {

/*
 * HTML 5 audio player, can be included into Gazette posts via shortcode
 */
plyr.setup('.gz-plyr', {
	debug: !0,
	title: 'Gazette Audio',
	tooltips: {
		controls: !0
	},
	captions: {
		defaultActive: !0
	}
});

jQuery(document).ready(function () {
	jQuery('.tablinks').on('click', function (e) {
		jQuery('.tabcontent').hide();
		jQuery('#' + jQuery(this).data('target')).show();
		jQuery('.tablinks').removeClass('active');
		jQuery(this).addClass('active');
		jQuery(this).blur();
	});

	jQuery('#latest-tablink').trigger('click');

	if (jQuery('.scrolly .step').length > 0) {
		enterView({
			selector: '.step',
			enter: function enter(el) {
				el.classList.add('entered');
				jQuery('.item').hide();
				jQuery('.item-' + jQuery(el).attr('data-index')).show();
			},
			exit: function exit(el) {
				var index = jQuery(el).attr('data-index');
				index = Math.max(0, index - 1);
				if (index > 0) {
					jQuery('.item').hide();
					jQuery('.item-' + index).show();
				}
			},

			offset: 0.3 // enter at middle of viewport
			//once: true, // trigger just once
		});
	}

	if (jQuery('.accordion-wrapper').length > 0) {
		jQuery('.accordion-wrapper .accordion-title').on('click', function (e) {
			e.preventDefault();
			jQuery(this).parent().parent().toggleClass('is-active');
		});
	}

	//.article-collection-teases_showmore
	jQuery('.article-collection-teases_showmore').on('click', function (e) {
		e.preventDefault();
		jQuery('.article-collection-teases__hide').addClass('show');
		jQuery(this).parent().hide();
	});
});

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,